{"pages":[{"title":"tags","text":"","link":"/tags/index.html"},{"title":"photos","text":"","link":"/photos/index.html"},{"title":"categories","text":"","link":"/categories/index.html"}],"posts":[{"title":"Business Model of NetRunner","text":"After I play more NetRunner, I started to go deep into the game. I was always mixing up the TCG, CCG, and LCGs. NetRunner is a LCG - Living Card Game, which means besides the core set of the deck you buy the first time, it will continuously sell a small pack of expansion every one or two month, with the specific and same cards in each expansion pack. It is a kind of CCG - Collecting Card Game, players need to collect more cards from expansions. The main difference of LCG from CCG and TCG1 is that players know what they will get from each version of expansion. There is no randomize in cards. Expansions of most CCGs and TCGs have random cards in each card bag, including a few rare and strong cards, so players need to buy many the same version expansion to get the card they want. Or they can trading with the others in TCGs, buy the specific card of exchange with each other. Because of rareness, some good cards have a very high value in the market, for example, Magic: The Gathering. Pure CCGs like HearthStone are without trading system. They are all different from regular card games, which has only one version of deck. And also different from DBG - Deck Building Game, of which the majority of the deck is built during the game instead of before the game. Like Dominion, players use their first version of deck to buy the card they want in the game. TCG, CCG, and LCG all have continuous expansions. They keep giving players new cards, help rebuilding their decks, give them new game experience. I think it’s a really good idea to expand the game’s life span. Dominion also have expansions, but not frequently as LCGs. For DBG and TCG, new expansion always mean new environment or new version.They usually cost one year or more for expansion, with many kinds of new cards. More expansions means more profit. For TCG and CCG,they can also sell single rare cards for a very high expense1. But this would lead to bad experience that players with not very much money always do not have powerful decks, make the game unbalanced. That’s exactly what I heard frommany Magic player friends. But - yes, they are still Magic players. They also told me that Magic is such a good game with long time history, which make it a perfect system, a huge card pool, and good balanced. And the most important thing is, the tules are very simple to learn. The only thing that make some players give up is the price. Compare to TCG, NetRunner seems to have a great advantage on price. Because of no rare cards, players, players just need spend some money to buy the cheap expansions they need. This help the balance not influenced very much by whether you have much money. And FFG can continuous profit from the cheap but large selling expansions. Also to some extent it is more friendly to new players. Since the profit-model on LCGs is driven by capturing new players rather than keeping players who have already “bought-in”, we can see that FFG is also tempting to push their talent towards different games and away from Netrunner. Then, why apply LCG to NetRunner? I think there are several reasons. First,NetRunner do not have a theme with great background story. Those kind of cards are always TCGs or regular themed card games. Only the methods to play makes it easier to expand. Second, the theme cyberpunk comes from the developing technology today, so that it can always add in some new functions just as the real new technology applies. And third, NetRunner is not their first LCG, and won’t be the last. As is said before, FFG is trying to apply more LCGs in the future, to profit more. Also this busness mode has impact on the game itself too. Because of choosing LCG, FFG won’t put all powerful cards in the same version of expansion. On forums we can always see some players introducing the best cards in each expansion. And under this mode, FFG can also expand every aspects of the game - the characters, funtions, and playing mode, etc. FFG has their won designers and artists, and their card games are famous for beautiful vision design and high quality components, which also apply to NetRunner. Most kind of TCGs do not have a online version, because it may cause the phenomenon of sockpuppets all over the server in order to get and sell rare cards. But LCGs can have a online version. Till now the online game of NetRunner is still developped by players2. Online version is very convenient to get familiar with the rules and decks, and to test the decks.","link":"/2015/11/02/BusinessModelOfNetRunner/"},{"title":"Pizza DIY - 搭配选择的UI设计","text":"This project was done by January 16, 2015, as the final project of the course Interactive Interface Design &amp; Development. Using CSS + HTML5 + Javascript. This was a team work, with two partners from Industry Design College designed the page, and I was the programmer to make it true. We aimed to find a UI mode of collocation on cell phones. We compared many different modes, and finally chose my idea of using a round menu. We all agreed that this idea would make users feel more interesting, and our user experience test proved it. It feels really good to using your techniques to make more fun. During the process I applied the object-oriented concepts – the ‘ring’ is a class and can be used on different themes besides pizza DIY through just replacing the icons. Code sample:123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198// icon click functioniconClick: function(index, total) {this.changeColor(index, FR.MenuRound.currentIcon);var base = FR.MenuRound.currentIcon - index;if (!base) {FR.MenuRound.showIndexList(index);return;}var isNext;// judge the direction of rotationif (base &gt; 0) isNext = base &gt;= total / 2 ? true : false;else isNext = base &gt;= -total / 2 ? true : false;var n = 1;if (isNext) {while (1) {var obj = (FR.MenuRound.currentIcon + (n++)) % total;FR.MenuRound.animQueen.push(obj);if (obj == index) break;}} else {while (1) {var obj = (FR.MenuRound.currentIcon == 0 ? total : FR.MenuRound.currentIcon) - (n++) % total;obj = obj &lt; 0 ? total + obj : obj;FR.MenuRound.animQueen.push(obj);if (obj == index) break;}}// if the waiting list is empty, call the rotate functionif (FR.MenuRound.animQueen.length == Math.abs(n - 1)) {FR.MenuRound.rollRotate();}// try to use the setTimeOut function but failed// setTimeOut(\"FR.MenuRound.showIndexList(\"+index+\")\",5000);// setTimeout(\"alert('5seconds!')\",5000);FR.MenuRound.showIndexList(index);},changeColor: function(index, preIndex) {var indexSrc = document.getElementById('fr_icon_'+index).src;var preIndexSrc = document.getElementById('fr_icon_'+preIndex).src;if((index == preIndex) &amp;&amp; (indexSrc == FR.MenuRound.itemsSelect[index].icon)) return;if(index == preIndex) {document.getElementById('fr_icon_'+index).src = FR.MenuRound.itemsSelect[index].icon;return;}if(preIndexSrc == FR.MenuRound.items[preIndex].icon) {document.getElementById('fr_icon_'+index).src = FR.MenuRound.itemsSelect[index].icon;return;}document.getElementById('fr_icon_'+index).src = FR.MenuRound.itemsSelect[index].icon;document.getElementById('fr_icon_'+preIndex).src = FR.MenuRound.items[preIndex].icon;},/** to show the effect of the UI design, make specific treatment. * So this function doesn't contain much techques.*/showIndexList: function(index){ if(index == -1){document.getElementById('panelBg').style.visibility = \"hidden\";for(var i = 0; i &lt; 3; i++) {document.getElementById('meat_'+i).style.visibility = \"hidden\";}for(var i = 0; i &lt; 4; i++){document.getElementById('vegetables_'+i).style.visibility = \"hidden\";}} else if(index == 0) {document.getElementById('panelBg').style.visibility = \"visible\"; for(var i = 0; i &lt; 3; i++)document.getElementById('meat_'+i).style.visibility = \"visible\";for(var i = 0; i &lt; 4; i++){if(getComputedStyle(document.getElementById('vegetables_'+i)).visibility == \"visible\"){document.getElementById('vegetables_'+i).style.visibility = \"hidden\";}}}else if(index == 1) {document.getElementById('panelBg').style.visibility = \"visible\";for(var i = 0; i &lt; 3; i++) {document.getElementById('meat_'+i).style.visibility = \"hidden\";}for(var i = 0; i &lt; 4; i++)document.getElementById('vegetables_'+i).style.visibility = \"visible\";}else {document.getElementById('panelBg').style.visibility = \"hidden\";for(var i = 0; i &lt; 3; i++) {document.getElementById('meat_'+i).style.visibility = \"hidden\";}for(var i = 0; i &lt; 4; i++){document.getElementById('vegetables_'+i).style.visibility = \"hidden\";} } },iconClick2: function(index, listIndex){var da = new Array(2);var ta = new Array(2);var aa = this.a;var randPic = document.createElement('div');randPic.id = listIndex + '_' + index;randPic.style.position = 'relative';for(var i = 0; i &lt; 2; i++) {da[i] = Math.random(); ta[i] = Math.random() * 2 * Math.PI - Math.PI;var img = new Image();if(listIndex == 0) img.src = FR.MenuRound.items0[index].icon;else if(listIndex == 1) img.src = FR.MenuRound.items1[index].icon;img.style.position = 'absolute';img.style.left = 1.6 * aa + 0.9 * aa * da[i] * Math.cos(ta[i]) + 'px';img.style.top = 1.6 * aa + 0.9 * aa * da[i] * Math.sin(ta[i]) + 'px';img.style.width = 20 + 'px';img.style.height = 20 + 'px';img.style.zIndex = 15;$(img).rotate(ta[i] * 0.5 / Math.PI * 360);randPic.appendChild(img);}document.getElementById(this.id).appendChild(randPic);},// the rotate functionrollRotate: function() {this.stepA = this.angle / this.steps;this.steps = parseInt(this.time / this.speed);this.counter = 1;var sA = 6;var tA = this.angle;var quantity = this.items.length;var a = this.a;var b = this.b;var iconWidth = this.iconWidth;var iconHeight = this.iconHeight;/** judge the direction of rotation* or it may get wrong when continuously clicking*/var isNext = (this.currentIcon + 1) % quantity == this.animQueen[0] ? true : false;FR.MenuRound.fr_interval = setInterval(function() {if (FR.MenuRound.counter &gt; FR.MenuRound.steps) {clearInterval(FR.MenuRound.fr_interval);FR.MenuRound.currentIcon = FR.MenuRound.animQueen.shift();for(var i = 0; i &lt; 6; i++) {if(isNext){FR.MenuRound.iconA[i] = FR.MenuRound.iconA[i] + tA;}else FR.MenuRound.iconA[i] = FR.MenuRound.iconA[i] - tA;}if (FR.MenuRound.animQueen.length != 0) FR.MenuRound.rollRotate();return;}for (var j = 0; j != quantity; j++) {var i = j;var icon = document.getElementById('fr_icon_' + (FR.MenuRound.currentIcon + i) % quantity);var x = y = 0;if(isNext){FR.MenuRound.iconA[i] = FR.MenuRound.iconA[i] - sA;}else{FR.MenuRound.iconA[i] = FR.MenuRound.iconA[i] + sA;}x = a + a * Math.cos(FR.MenuRound.iconA[i] / 360 * 2 * Math.PI);y = b + b * Math.sin(FR.MenuRound.iconA[i] / 360 * 2 * Math.PI);FR.MenuRound.setZoomLevel(icon, x, y);FR.MenuRound.setRotation(icon, FR.MenuRound.iconA[i]);// animation endsif (FR.MenuRound.counter == FR.MenuRound.steps) {icon.rawX = x;icon.rawY = y; }}FR.MenuRound.counter++;}, this.speed);},// set the picture's rotation itselfsetRotation: function(icon, theta) {$(icon).rotate(theta + 90);}, Files: Pizza DIY","link":"/2014/12/28/Pizza_DIY/"},{"title":"Post Mortem - EcoLand","text":"This time I was still in Team 8. Our game is EcoLand, a serious game about real-time strategy/management simulation in which the player controls an island populated by wild animals and growths of vegetation while managing factories that harvests the animals for meat. The goal is to wisely invest in resources to maintain animal population and plant life while keeping up with the meat supply demands of the industry over the course of one year. My contribution to the projectIn this project I perform as the only artist in our team. So my major contribution is the art works of the game. Specific art works are showed as follow: Concept scene as the loading screen of the game Assets such as factories, trees, and animals User interface components LOGO of the game Trailer animations Besides the specific art works, I also discussed with my team together of the game concept. Different things to do next timeNext time we are still in the same team, and the art work is more challenging. I’ll need to design the characters. And for the game world will be bigger next time, I’ll need to talk about many more details with programers, so I need to communicate with my team more. Since we have the experience of the previous prototype, I think it will be easier next time. Things I learned from participating in this processFrom each experience of making a prototype I can always benefit a lot. So does this time. Positive lessons:First thing is Trello. This time we tried to use Trello to trace our works. Trello is a kind of online sticker board. This is a very good way to trace the process of our work. And it is very clear that every one has his own works. Like we have four programers, if I need to talk to someone of the art work he needs, I can simply check the trello stickers and find who is in charge of that part. Second is seeking advice from experts. Because it is a serious game, we need to make sure what we showed is the correct information to the audience. Our producer Leigh contacted many experts in biological and environmental field, and finally we met an expert from environment school. He confirmed our idea, and gave us some great references. I think that we should always find some experts for advice, not only for pure serious games, because we always want to deliver the information exactly what we want, and they will really help a lot. Well the last is about my work myself. This is the first time that I need to take in charge of all the art works in the team, and I’m not very good at the 3D modeling skill. I tried my best, learned modeling things through tutorials and asking the other artists, and finally I’m satisfied with my job. Thanks a lot to Kamchai, Cody, and Chloe. I’ve learnt that feel free to learn from others if you are really not that good. Negative lessons:Well the first is about our team communication. I have to say that I didn’t know what the programers wanted to make what the game would look like until the last day I saw the nearly finished one. Though I made the concept picture, I didn’t tell them what I expect the game to look like before. And it was a bit late to modify that time. And when I finished some art assets, I think I need response from them, not only ‘You did good’. So I need to communicate with them more. The second is about our meetings. Sometimes we cannot express us very clearly that we still have different understandings after the meetings. But this phenomenon is getting better and better as the time flows.","link":"/2015/11/03/PostMortemEcoLand/"},{"title":"Post Mortem - Cyber Force","text":"Cyber Force is a game that players perform as an ethical hacker hunting bugs in programs. Players enforce justice in the cyber world. The core mechanic is to find out the bugs among programs but the player need to be careful with his power – abuse will cause a domino effect and more bugs. Platform: PC Engine (given): Unreal Theme: Iteration on Brute Force Audience: Gamers 20-40 My contribution to the projectIn this project I perdormed as a Technical Artist. At first I was the only artist, and my team decided to use the minimal art style so that I can work more on tech-art things. After the personnel change we got another artist Cody, so after that I mainly focus on the effects inside the game. Specific works I have done are showed as follow: Growing effects and particle effects inside the game Map build UI assets HowToPlay video (together with Ray) Help publish the game Different things to do next timeThis time I really worked as a tech artist. I’m not very good at art work compare to other artists, but this time I found out what role is the most suitable for me. I forcused on the effects of arts, use program methods to make it better. These are still basic tech-art things, but they really enlightened me. So next time I should try more tech-art things to help the artists work better. I am really happy when doing my work. Things I learned from participating in this processPositive lessons:The first thing is of course my attribution of Tech-Artist. I can apply the knowledge I got from my tech-art class to our game, and try to figure out how a tech-artist can do in a real game project. I didn’t need to do the art things I’m not familiar with, but help to make the art work better. That’s the best thing. Second is the great communication between team members. This time our team got a good communication with each other. We had clear feature lists, and clear assignments for each member. Due to the great efficiency, we had playable version in every sprint, and discussed together what we could do better in the next version. That a very awesome experience. Third is that our game got good number of downloads. Though not the most among all the groups, this still gave us confidence. Some downloaders also gave us feedbacks on the gameplay and art styles. Then we found that our game still need many improvement. So it is very important to test our game by normal players so that we can found some problems that we take for granted. Negative lessons:First is that we lose a team member. This is a terrible feeling that we lost one of our main programmers. In real world we may not be such lucky to find another great programmer. It’s really bad feeling. Second is that, as a technical artist, I still failed to implement the skeleton animation from Maya to Unreal. Finally due to time limitation, we decide to not use it. Third is that we seemed to have some AI misunderstanding during our development. This is maybe because of our language expression. But finally we all got them done.","link":"/2015/12/16/PostMortemCyberForce/"},{"title":"Post Mortem - Swift","text":"This time I was in the Team 8, and our game is called Swift. Swift origins from Zaxxon, an isometric shooter arcade game developed by Sega in 1982. So our game is still isometric, using art style like Monument Valley, remove the combat element, and make it a pure speed game. My contribution to the projectIn this project I performed as one of the artists. Another artist is Wesley. We separated art works. The specific things I had done were: Draw the LOGO, game-start screen, and game-over screen Draw the background Draw some of the assets Besides the specific art works, I also discussed with my team together of the game concept and level design things. Different things to do next timeIn the next project, I found that I will be the only artist in our team. So I think I will need to decide the art style of our game, and design the characters, which was done by Wesley this time. And also in the following projects when I am acting as an artist, I would communicate more with our producer and programmers. And next time I think we artists should give out a concept picture of the ideal game. Especially when there is not much time left for the programmers to build the ideal game world. It would be very helpful. Things I learned from participating in this processThis time we are more familiar with the process of making a game prototype. We had learned from the previous one, but this time we also found some new lessons both positive and negative. Positive lessons:First is about the work assignments. This time we always held a short metting before every class, talking about what we had done and what we needed to do in the following two or more days. We set deadline for our each assignment. So our goals were so clear that we do not need to be confused about it, which made our work very effective. Second, we set a very challenging goal at the very first - using Html5 to realize 2.5D isometric environment, which pushed us very hard during the process. We learned to draw new things from digital tutorials, as well as programmers tried hard to figure out how to code with Html5. What we had done is beyond our imagination of one month before. The third I think is about our game concept. We found Zaxxon is enough playful just try to survive during the move, so we removed the combat system, made it a speed game, and added some powerups to make it more exciting. I love the iteration idea very much. And we also used no inputs besides the arrow keys. We all loved the idea, so that we could put more passion in the game. Negative lessons:Well the first is that we were too ambitious. Work of artists seems not that difficult, but work of the programmers did. We designed many aspects of the game, but what we realized is not that much. Our expectation was too perfect for a prototype. So finally we do not have enough time to finish all we wanted. Second, we didn’t have a specific level design. We didn’t discuss about it very detail and just used the first design, which was also modified during the level build in programs. I think the level design is the core content of a game beside the core play method. So in my opinion I think we should put more emphasis on level design, which would make it a game. Third, think about our artists’ work. Actually we didn’t do it very satisfied - some animations was not very good, and some assets had shadows while some not, which seems a bit weird. We will try to do better next time.","link":"/2015/10/20/PostMortemSwift/"},{"title":"Post Mortem - The Modus Room","text":"The Modus Room is a first-person puzzle game in which the player uses their mobile device to look and move around a room to examine and pick up objects in search for clues. When the players discovers a clues, they use the clues as solutions for the puzzles in order to find the key to the next rooms where more puzzles await. Platform(Given): Mobile Engine(Given): Unity Theme(Given): Film-Noir, Totalitarian, Dystopian, Tyrannical (Kim Jong-Un) Audience(Given): Inter-city youth This time the process is not smooth as previous games. At first we tried to make a shooting game that the main character hold a gun walking on a dark street, and kill enemies who are selling guns and drugs and wanted to kill him. We even finished the core gameplay mechanic. But when the first pitch we got advice from others that since our audience is inner city youth - teenagers without educated and easily attracted by violence and drugs - which may cause bad influence in the real world, we considered to change our main gameplay. We originally have two weeks, but then we have only one week - actually less than 5 days to finish The Modus Room. My contribution to the projectIn this project I perform as the only artist in our team. Yes it’s the same team as the previous game. My major contributin is the art works of the game. Specific aet works are showed as follow: UI including start screen background, buttons(some of them were not put in the final version due to the lack of time) The house, including the building and furnitures inside Trailer animation Also a character with animation for our first idea, but dropped I also took part in our discussion on the two ideas we had, and voted for escape room the second time. Different things to do next timeAfter three times of art work training, I’m now getting more and more familiar with art works in games. But I still need to improve a lot. I didn’t get professional art training, so sometimes lack the sense of combine colors, such as this time I finally found that I dark grey would look better than pure black. I think I have talked a lot with our teams this time, but I still need to communicate more next time. Also about the idea change, members in the team should all think twice about whether the idea is feasible. We need to think critically about it next time, to avoid such things from happening again. Things I learned from participating in this processThis time many things left me deep impression. Positive lessons:First thing is team running. We are the same team as the previous one, so we have known each other more. It seems that we communicate more free with each other this time. Also two of our programmers didn’t know unity very much last time, but they have got some idea about it this time, and that’s also why we can nearly finish the prototype in such a short time. Second is our programmers’ hard work. They work very hard, and tried their best to finish the game in time. And they are very willing to communicate with the team. Third is testing. This time the playable version came out more rapidly so we could see and test the game from time to time. I still have the test version installed on my phone. Negative lessons:First is that we are more aware about the importance of team stay together. We were late to choose the seats, so we had to saperate to different places. So every meeting seems so pracious. And during the day we are always surrounded by different teams with their meetings. It’s not good for team works. And I think we didn’t handle it very good. Second is that we are sometimes late for class. We always wanted to start meeting when the class is on, but often not all of us arrived including me for some reasons, so we just postponed the meeting. So after the meeting we usually didn’t have enough time in class. Though we had done better than before, this was still a big problem. Third is that we didn’t have enough game design thing. We didn’t get agreed on the same ideas for puzzles to put in the game. Though our producer uploaded a design doc for puzzles for reference, we changed a lot in the final game without discussion, and so many of my assets were not used. Well this is actually still the problem of communication. We need someone to maintain the level things and design the puzzles carefully.","link":"/2015/11/17/PostMortemTheModusRoom/"},{"title":"Review of Android - NetRunner","text":"Actually that was the first time I heard about the game Android: NetRunner when my teacher told me that we would play it in class on the Game Design class two month ago. I searched on the website, and it seems that it’s a very great new Trading Card Game, like Hearthstone. But I didn’t get any sense until I got the game - There are so many cards with so many characters which excited me greatly, and the nice punk art style also encourages me to explore the game deeply. Game OverviewThis game is about the story between corporations and hackers. It’s actually a Living Card Game. Not like the TCG games I played before, in NetRunner the two players play different characters - corporation and hacker. Corporation cannot play against corporation, and hacker cannot play against hacker. As a student of computer science before, I have to say that NetRunner performs a highly similar situation towards the real hacking thing. The corporation needs to build servers and protect them with ices while the hacker using his resources to hack the corp’s server. Making runs is always exciting and adventurous. Play The GameFor the corporation, the main work is to use his clicks to build servers and advance them, protect them with ice - like firewalls of our computer. In servers there is a type of card called Agenda, which the player can get score from them when they are fully advanced. The corp can also install and advance other type of cards in servers to make the hacker confused. Every turn the corp is forced to draw a card and get three initial clicks. In the original deck pack, there are four corporation identities to choose. Each identity has a unique skill that can be applied during the whole game. Each identity has 28 special cards for him, and there are 22 general cards for all of them. There are two ways for the corp to win: get seven points first, or kill the hacker. The corp can do damages to the hacker and force him to drop cards from grip, and once the hacker has no card to drop, he will die. For the hacker, the main work is to use his resources to invade the corp’s servers and steal the unfully advanced Agenda cards and get score from it in his limited clicks. The player installs virus programs on hardware, using these virus to break the ices outside the server when making a run, try getting the Agendas as well as avoiding himself from being damaged. The hacker has four initial clicks every turn. There are three original identities for the hacker to choose, and also each has a unique skill to help him invade more easily or protect him from damages. Each identity has 33 special cards for him, and there are 15 general cards for all of them. The hacker can win through the following two ways: get seven score first, or when the corp has no card to draw. Thoughts After PlayingNetRunner is a game full of strategies and mind games. The corp needs to determine whether to install Agendas or others, to install what kind of ices, to get credits or draw cards - these all will affect the game results. The hacker may bet on which server to invade that he can get the most benefits. Sometimes luck is very important - I once invaded a server at the beginning turn when there was no ices, and I got two Agendas with each values three agenda points. I don’t like this. But most of the time, you can still hold your fortune. Like Magic: The Gathering, NetRunner doesn’t limit the number of cards in your deck, but put a restriction on the total agenda points inside. Though for corps they will lose when they have no card to draw in R&amp;D, it’s not a very good idea to build a very huge deck, because larger deck means more Agenda points, so it also increases the chances for the hacker to steal an Agenda. There are many expansion packs of NetRunner now, and the company FFG is still designing new cards for the game. To some extent, to get all the cards you want is a big purchase. But unlike many TCGs, LCG games do not have randomized rare cards, which reduces the unbalance caused by purchasing abilities. There are also many functions in NetRunner like Tag and Trace. The corp can trace the hacker and tag him, which is not a good sign for the hacker. And different Counters, to help perform the function of the original cards. Well actually NetRunner is the most complicated card game I’ve ever played. That’s also why I love it very much now.","link":"/2015/10/19/ReviewOfAndroid NetRunner/"},{"title":"Post Mortem - YoVenture","text":"I was in the Team 3, which get the toy yo-yo. So we made a game called YoVenture, a 2D action platformer where you use a yo-yo not only for combat, but also as a tool to interact with the environment. We were inspired by the history of the yo-yo in Ancient China. You can find that the dragon in the boss level showed in the following picture is also in Chinese style. My contribution to the projectThe specific contributions are: Name the game Program the AI of all the snails Program the snail counter Program the boss level, including the AI of the dragon, motion of the fireballs, and the fight actions in the level. Package the program files to the excutable version Besides these, I gave advice to our artists on the art features of Chinese style. And we programmers always work together to solve problems we met during the period. Different things to do next timeActually because there are three engineers in our team, and I was not familiar with the pygame before, most of the works like build the program frame of the whole project was done by Sudeep, who is more familiar with pygame. I was a bit lazy. I think if I can travel back now I’ll try to learn more of pygame and share more work with our engineers. So as in the future. Also, as a technical artist, I may try to be an artist some time. Things I learned from participating in this processThis is the first time I join a team and make our own games. So the experience is very precious for me to get through the process of making a game prototype. Positive lessons:First, as an engineer, I learned to seperate all the things we need to program and make a standard of the connection ports. Then we can work independently. We made the file versions and changes made to them clearly so that we can combine them together correctly. That’s the source control, which is the basic thing for programers to work together efficiently. Second, we are a team, so we tried to make the team communication to be as convenient as possible. We had a shared drive folder and all the thing were uploaded into it, so that we can keep updated. We mail to each other whether there is something need to be discussed. And we talk about our project everytime the prototype class starts. Our team members are very nice too. Third, I have to say about our artists’ excellent work. They are Tara and Kamchai. They have very good art skills, and finish all the art materials we need in time. Their passion and enthusiasm were surely a great encourage to the whole team. So I learned that being positive is very important in the project process. We all kept energetic and made out the game in our minds. Negative lessons:There are surely something we need to improve in the future. There are also three things I think that is most urgent to be improved. First is that we didn’t have a design document. All the works were assigned orally, and sometimes I actually do not know what’s the next step. We need to make goals. Second, we uploaded all the files to the drive, but didn’t classify them very well, that we always needed to ask where to find a specific file. Third is that we are always hungry before one o’clock when the class ends.","link":"/2015/09/22/ProjectPostMortem_YoVenture/"},{"title":"Snowy Scene Generator(Maya, Python)","text":"The second project I decided to generate a snowy scene in Maya. At first I tried to emulate the scene using codes myself, but found it too complicated. Ian, our teacher, suggested me to use the particle system. So finally it’s down using particles. Scene preview: User interface: See how it works on Youtube: Python scripts sample: instructions: click on the plane click ‘Select Start Plane’ button if you want to use a specific image as snowflake texture, browse and select the image, then turn on the ‘Use file as texture’ checkbox. if you don’t turn on the checkbox, the particle will be rendered as white cloud type if you want to use more than one image to texture different particles, then turn on the ‘Use file Sequence’ checkbox. then the file browsered just now will be set as the start of the file sequence. make sure to name the textures in ‘image.n’ format. for example, ‘snow.1’ set values of ‘Average Size’, ‘Density’, ‘MaxHeight’ set values of ‘Direction Vector’ if you want to make collisions between other objects and the particles, select those objects and then click ‘Select Object Collide With’ button, and turn on ‘Make Collision’ checkbox click ‘Run’ to start generating the snowy scene logs:v1.0.5: 12-19-2015, add error captionsv1.0.4: 12-19-2015, add collisions; delete animation length optionv1.0.3: 12-16-2015, add particle render type - cloudv1.0.2: 12-9-2015, add texture sequencev1.0.1: 12-2-2015, add log function","link":"/2015/11/18/SnowySceneGenerator/"},{"title":"Snowflake Making Tool(Maya, Python)","text":"This is my first tool on Technical Art class. I made a snowflake generate tool, use the given object from the user, to generate a beautiful piece of snowflake. This project is mainly for getting familiar with Python scripting in Maya. User interface: See how it works on Youtube: Python scripts sample:","link":"/2015/10/21/SnowFlakeGeneratingTool/"},{"title":"ShaderJam - 泡泡材质","text":"把别人家的需求盗过来了～～ 要求是做个泡泡材质，能够表现泡泡厚度，并且有上下高光，如图： 这么鲜艳的色彩、一致的pattern，应该是p的图，不过看着确实挺好看挺合理的。。 边缘厚度，使用fresnel进行一定计算生成。 上下的高光，我认为光源在上方，上方的高光是光源照射上方内表面的反光，下方的光则是下方泡泡内表面的反光。Shader里使用向量LightDir表示虚拟光源，水平向下flip表示下方的虚拟光源，计算反光。 使用cubemap表示环境反光。 使用一张水波normal图，在世界坐标下计算模型vertices的位移，使泡泡变形。 使用UE 4.22 Preview7： Download .uasset Welcome any thoughts :D","link":"/2019/04/01/ShaderJam-Bubble/"},{"title":"Unreal Shaders - Dancing Lines 跳动线条","text":"使用顶点动画材质的跳动线条效果，以及制作环形VFX的一个小技巧。 预览： 视频来自B站，Youtube请戳 https://youtu.be/lytFmqqbp9k 跳动线条材质全图，点击查看大图：","link":"/2020/04/05/UEMaterial-DancingLines/"},{"title":"Unreal Shaders - Ice and Crystal 冰块与水晶","text":"学习制作星空宝石效果，因此把相关的次表面Subsurface，Bump贴图和常见的冰块效果一起学习了。 预览： 视频来自B站，Youtube请戳 https://youtu.be/_nkGncZxtww 冰材质全图，点击查看大图： 星空水晶材质全图，点击查看大图：","link":"/2020/03/28/UEMaterial-IceAndCrystal/"},{"title":"Unreal Shaders - Inner Energy 能量涌动","text":"尝试实现一个类似辉光球的内部能量涌动效果，仅使用UE材质。可以应用在任何物体上。 预览： 视频来自B站，Youtube请戳 https://youtu.be/K0qudPjWKLI 材质全图，点击查看大图：","link":"/2020/03/21/UEMaterial-InnerEnergy/"},{"title":"Unreal Shaders - for game Deliriant","text":"Using UE 4.14.3 - 4.15.","link":"/2017/03/07/UnrealShaders_Deliriant/"},{"title":"Unreal Shaders - Sun","text":"Tried to make a Sun animation in Unreal Engine 4.16.1. Welcome any advice and suggestions :D (Adding ‘not real Sun’ is to prevent if any misusage in science related things) No particles used. There are two separated Meshes: the sun sphere and a plane. No vertex animation. The quad plane performs the atmosphere. It splits the Sun from the center and is set to billboard inside the material. Below is the material snapshots for reference. The Sun sphere: Three Noise nodes are used to make the basic bright area, black dots, and upper bright gas. Noise are based on local position and time to get some change overtime. To make it less consume I’m considering using noise maps instead of Noise node, but currently wondering how to deal with the uv arrangement of sphere to make the noise textures looks seamless when changing. The Plane: It is a simple solution that I rotated one texture by two different directions and speeds, and used sine function for different changing opacities. Sometimes you can see very bright storm appear – this is controlled by a blueprint to randomly place a small storm mesh at the surface of the sun sphere, in order to make a bright storm and looks 3D. Welcome any thoughts :D","link":"/2017/06/18/UnrealShaders_Sun/"},{"title":"Unreal Shaders - Lava Flow","text":"3D lava flow made in UE 4.14.3. Using blendshape for the lava shape in Maya, and animated materials in UE.","link":"/2017/03/07/UnrealShaders_Lava/"},{"title":"欢迎来到Vega的世界","text":"这是我尝试将之前我各处的信息综合一下的地方。也是第一次这么折腾建站 XD这里会发我想发的所有东西（当然是不会侵权的那些），上一次还是在10年前在已经关闭的百度空间。感谢Github，Hexo，还有Yilia主题的制作者Litten。 这篇之前时间的post都是搬运之前的博客，保留了时间戳。虽然看着当时做的东西很挫。。。不过也是成长的见证吧！留下了！～","link":"/2018/06/12/Welcome/"},{"title":"Basic OpenGL Renderer","text":"Git repo This is an in-class solo project in Shader Development class, using OpenGL. Basic structure: Mainer.cpp VertexShaderTest.glsl VertexShaderCodeNoLight.glsl FragmentShaderTest.glsl FragmentShaderCodeNoLight.glsl Camera.h Camera.cpp Primitives ShapeData.h ShapeGenerator.h ShapeGenerator.cpp Vertex.h TeapotData.h Renderer BufferInfo.h Geometry.h Geometry.cpp MeRenderer.h MeRenderer.cpp Renderable.h Renderable.cpp ShaderProgramInfo.h","link":"/2016/12/19/BasicOpenGLRenderer/"},{"title":"Animation with Game Engine","text":"Below is an animation I made specially for NASA Science Animation Fellowship application. Mainly made with Unreal game engine, with the help of Adobe Premiere and Houdini. Map data and models of ISS collected from NASA’s website. Do you know what day was it? It’s March 20, 2015. A solar eclipse happened on that day, and astronaut Samantha Cristoforetti on the International Space Station took the following picture. So that’s why I put ISS there in the video. Did you see the black shadow dot on earth by the moon? Also that day was the Spring Equinox, the stars’ position is also according to the date.","link":"/2017/02/19/AnimationWithGameEngine/"},{"title":"Fictive Context of NetRunner","text":"Android: NetRunner is set in the fictional Android entertainment world. The whole world is a cyberpunk sci-fi world. How it works? The word “punk” comes from punk rock, which is a rock music genre developed between 1974 and 1976. The term ”punk” was first used in relation to rock music by some American critics to describe garage bands and their devotees. Punk bands typically use short or fast-paced songs, with hard-edged melodies and singing style, stripped-sown instrumentation, so people use punk rock to express their emotions, and often with political, anti-establishment lyrics. They took root in local scenes that tended to reject association with the mainstream. So we can almost see what’s the feeling of “cyberpunk”. Cyberpunk is a subgenre of science fiction in a future setting, which often center on a conflict among artificial intelligences and megacorporations. That future is often called the antithesis of the generally utpian visions. Megacprporations, cyberspace and hackers are always the basic setting in such stories. So we can see that the world of Android inherited nearly all the elements of cyberpunk. Four megacorporation - Haas-Bioroid, Jinteki, NBN, and Weyland Consortium - dominate nearly all essential aspect of human life, and three groups of runners - Anarchs, Criminals, and Shapers - as hackers trying to hack in to the megacorporations’ servers and reveal their crimes. Figure 2 shows three runners from the core game card set. Such cyberpunk setting fits the main topic of Android: NetRunner very well. The games is played in a cyberspace, which the runner make runs to the corporations’ servers. Runners use programs, varius, hardware resources to improve his hacking ability, while corporations upgrad and build ice outside to protect servers. It is exactly like what the corporations and hackers do in the real world. To some extent the story is also a hard sic-fi story, which means its settings are very accurate or have a lot of technical details. We can find many terms of professional like install programs, trace and icebreaker which are really used in the real world. The story of the world of Android is very long, which uses five books including the identity trilogy to describe the whole world. I haven’t read them. But there are also background stories for each megacorporation and runner in the rule book as those cards publised. We can see that the three groups of runners has their own skill sets and goals to pursue. Also each runner in the same group is different characterized, which can be found in the following extension packs. Their skills also are related to their settings. Such as Noise, his skill is to trash the top card of R&amp;D of the Corp whenever he installs a virus program, just like his bold and uninhibited character in the story, he easily hacked into the Corp for a lot of times, but no one could find the evidence. Some cards that are not the main runner character also has their own stories. Like showed in Figure 4(a), Bernice Mai is a professional in NBN, who is pro at trace. Runners invading the server under her manage all risk the danger of being traced and locked. So on the card, she has the trace strength of 5 - a very high strength - that the runner has to pay a lot to upgrad his varius or just get locked and receive the damage. Some cards together can tell a whole story. Figure 4(b) is the identity card of a Shaper called Nasir Meidan. He is good at trading - to trade what he want with his hack skill. So his skill is to lose all credits in his credit pool but gain the credits equal to the rez cost of that ice that would be more valuable to him. The event card Social Engineering (Figure 4(c)) tells the story that he tried a very clever way and get the tickets through trading, to get into the Beanstalk, where he can travel to other places of the solar system through Challenger spaceships. These are just some cards. I think that we can find many cards that make up the whole world of Android. The designers found out the point of each character, and give their cards the skills which just shows their personalization. This is a very great way to help illustrate the big scene of the main topic. Besides, the art pictures on each card is also drawn in the style of cyberpunk. With clear bounded metal colors, and high-tech assets, we can nearly smell the taste of computers. They drawn every card differently, and made the picture related to the topic and background story. This is also very helpful to the players to get into the game very quickly. After playing the game and enjoying the beautiful pictures, I’m now very interested in the whole Android world. I’ll try to read the whole story later.","link":"/2015/11/09/FictiveContextof NetRunner/"},{"title":"GDC 2019 EXPO见闻","text":"每年最大的展台无非就是那几个，Unity，Epic，Microsoft，PlayStation，前年Lumberyard发布后亚马逊也开始疯狂占位，今年Google也加入了（好吧其实之前也在但今年比较重磅） 开发技术系列 Epic Unreal https://www.unrealengine.com/en-US/blog/epic-games-launches-epic-megagrants-new-unreal-engine-technology-and-epic-online-services-at-gdc-2019 UE 4.22已经支持Nvidia RTX开发。 实时渲染堪比影视了解一下，运用了RTX https://youtu.be/Qjt_MqEOcGM Epic Games store https://www.epicgames.com/ 也不是新闻了 炫耀大规模物理模拟的一个Demo https://youtu.be/fnuWG2I2QCY ，该系统将在4.23发布测试版。 上面这个视频现场使用6个还是8个屏幕拼接而成的大屏游戏体验，然而问了几个员工好像并不知道是不是用的新的nDisplay。。。 Unity https://blogs.unity3d.com/2019/03/19/the-heretic-megacity-release-real-time-ray-tracing-and-more-news-from-gdc-2019/ RTX, shader graph, new VFX system, … Google Stadia https://store.google.com/magazine/stadia 云游戏，不需要再专门去买PS4等主机，即可玩主机大作 YouTube互动接口 Style Transfer，利用机器学习，将一张图片的风格实时应用到游戏中。 Google的展台有AR的吃豆人，一种是基于现实地图将道路作为吃豆人的路径，另一种是4个人在一个方形区域内将手机作为吃豆人角色吃空中的豆子躲空中的怪。 还有AR密室逃脱，使用的是手机，传递信息，然后屋内特定物品的图案在手机中会显示不同的结果。 记得还有一个大型多人破坏游戏。。。建造很像是玩家一号，然而目前只有一种玩法就是破坏。。能实时看到别人的破坏。没找到照片记录O.O Microsoft Game Stack https://developer.microsoft.com/en-us/games，80%的展台都是关于Data&amp;AI，并看不懂。。有一个讲Graphics的，貌似是对游戏针对相应显卡进行加速优化。 Intel Odyssey https://gameplay.intel.com/?odyssey=True 未来图形与视觉计算。英特尔好像将要发布自家的独显了。 Simplygon https://www.simplygon.com/ LOD生成与减面神器，现场演示把几十万面的模型树生成卡片树，只有千面 今儿跟美术小伙伴试了一下，对于物体的剪影保持还是很不错的 InstaLOD https://instalod.com/ 各种场景模型游戏流程优化工具 Substance Alchemist https://www.allegorithmic.com/products/substance-alchemist 比Substance Designer更简单，还能直接根据照片生成相应贴图。 亚马逊的Lumberyard https://aws.amazon.com/lumberyard/downloads/ 今年感觉带来了惊喜，三年下来从当初连做个prototype都被嫌弃的引擎，到现在看上去功能方便了不少，感叹亚马逊的耐心。三年来一直无法跟主流引擎相提并论，硬是靠亚马逊的强大的宣传和坚持不懈追赶上来。不过还没有实际用过，不敢说真的追赶上来了。。 很早该引擎就有跟Twitch的结合，直播观看者可以投票为直播玩家做出游戏内选择。 种菜系统留下了深刻印象。。 输入系列 Ultrahaptics https://www.ultrahaptics.com/ 传感器追踪手的gesture，利用超声波在空气中形成触摸到物体的一种技术。 有unity的plugin，做了UE的intergration但没有完整plugin。 他们的体验是将VR游戏相结合，有两种，一种是就人站在机器前不动的故事体验，所有互动都在一个机器上进行；一种是叫cave，在里面定点布置一些产品，然后在VR里玩家可以走到不同位置体验水流、火烧、火魔法球等。 触摸感很像电流扰动，因此体验内容也偏向于魔法球、水流、火焰的感受。有一幕将手穿越魔法门的感觉也特别好。 离形成smooth surface的触摸感还有一段距离。 Pico Zense https://www.pico-interactive.com/zense TOF深度相机，有各种大小模块可集成，最远检测距离10米 Pico air light 互动投影，可以与特定实物互动，也可以作为屏幕投影所有安卓app。 Vuelosophy http://vuelosophy.io/ 较小巧的眼动追踪，便携版本据说比Tobii Eye便宜很多。 Microsoft Xbox Adaptive Controller https://www.xbox.com/en-US/xbox-one/accessories/controllers/xbox-adaptive-controller 最上面有一排接口，可以把市面上常用的手柄插在对应的位置，这个Adaptive手柄就会自动帮忙map相应的手柄键。这两个大大的圆可以map到A/B, X/Y, … Tap https://www.tapwithus.com/ 一款戴在手上的键盘，通过敲击不同的手指或手指组合，输入对应的字母，也可以自定义输入键。 不禁想起了几年前的Myo臂环，穿在胳膊上利用肌肉运动识别手势的，然而去搜了一下发现18年10月起该公司就停止生产和销售Myo了，略有可惜，期待他们的新产品。 Sensoryx VR手套 http://www.sensoryx.com/ 仅需在头显前加一个传感器，带上特制手套，就能在VR游戏中识别双手。 VICON 动作捕捉 https://www.vicon.com/products/camera-systems/vantage 动捕软件 https://www.vicon.com/products/software/shogun 可实时捕捉到游戏中，立即作出评分反馈等 Optitrack https://optitrack.com/ 老牌动捕系统 还有Xsens，骑自行车的VR等 其他 Magic Leap https://www.magicleap.com/ 在Unity与UE区域分别有两个体验区，一开馆就得去排队。。排了UE区的体验。体验内容是跟一个虚拟妹子一起做贴画。 感觉很适合虚拟管家或虚拟女友，人物距离感挺不错。 就是视野感觉小，出了眼前的方形显示屏就没有画面的，虚拟人或物必须在正前方才容易看见。 略微有彩虹纹，貌似是浮雕光栅成像原理的因素。 bHaptics https://www.bhaptics.com/ Tactsuit体感衣，在VR FPS中如果身上部位被击中，该部位会产生震动。 跟小伙伴稍微yy了一下，未来这些sensor应该会更加精细与密集，并且能够制造一定压力，才能做出玩家一号那种体感衣吧。 做出来以后，应用最广的应该不是游戏业。。。 Genvid, Interactive Streaming Engine https://www.genvidtech.com/ 互动直播观战引擎，在游戏开发时添加相应SDK，比如添加过个观战摄像机，在直播间的观众们就可以选择想要观看的摄像机。也能尝试点击游戏中的各种信息，实时查看游戏数据。 目前支持引擎Unity和Unreal，直播平台Twitch和YouTube。 记得英雄联盟S8的直播就启用了互动观赛系统，应该是一类的。 imvu https://secure.imvu.com/welcome/ftux/ 看上去像一个类似第二人生的在线多人虚拟社区？玩家可以自己上传角色模型、衣物模型贴图、场景等，然后标价卖给别的玩家，并且货币可以与真是货币兑换。 貌似有手机app。那么渲染质量就十分有限了，看宣传上觉得不如第二人生。不过很高兴看到类似社区正在涌现。 小伙伴推荐了一个叫Zepeto的app，同样的手机在线虚拟社区。 那么趁机安利一下Sansar，多人VR在线虚拟社区 https://www.sansar.com/ Pico VR https://www.pico-interactive.com/g2-4k 4K的便携式VR头显。在5G来临的时代，我觉得会是一个VR设备和体验的大爆发，尤其是便携VR将会疯狂涌现，相应的应用也会得到大幅发展。 3D Avatar SDK from a single selfie https://avatarsdk.com/ 从一张照片建立3D人物模型，还能自动补偿后背的发型。 Deep Motion Neuron https://deepmotion.com/neuron 自动化动画生成工具，将实时视频转换为模型动画的工具。免费试用30天：GDC19 小小牛 WanderPainter https://wonderpainter.net/ 可以将画的任何封闭图形进行二维rig，并添加基础动画走、跑、跳等，可以快速将自制角色应用于游戏中。 Kronos Workstation Ciara https://ciaratech.com/products/workstations/ 贼贵的电脑。。但网页打不开","link":"/2019/03/26/GDC2019EXPO/"}],"tags":[{"name":"NetRunner","slug":"NetRunner","link":"/tags/NetRunner/"},{"name":"桌游","slug":"桌游","link":"/tags/桌游/"},{"name":"游戏设计","slug":"游戏设计","link":"/tags/游戏设计/"},{"name":"WebDev","slug":"WebDev","link":"/tags/WebDev/"},{"name":"UI","slug":"UI","link":"/tags/UI/"},{"name":"原型","slug":"原型","link":"/tags/原型/"},{"name":"Unity","slug":"Unity","link":"/tags/Unity/"},{"name":"UE4","slug":"UE4","link":"/tags/UE4/"},{"name":"手游","slug":"手游","link":"/tags/手游/"},{"name":"AR","slug":"AR","link":"/tags/AR/"},{"name":"PyGame","slug":"PyGame","link":"/tags/PyGame/"},{"name":"Tools","slug":"Tools","link":"/tags/Tools/"},{"name":"Maya","slug":"Maya","link":"/tags/Maya/"},{"name":"PyMel","slug":"PyMel","link":"/tags/PyMel/"},{"name":"Shader","slug":"Shader","link":"/tags/Shader/"},{"name":"Subsurface","slug":"Subsurface","link":"/tags/Subsurface/"},{"name":"Renderer","slug":"Renderer","link":"/tags/Renderer/"},{"name":"OpenGL","slug":"OpenGL","link":"/tags/OpenGL/"},{"name":"GLSL","slug":"GLSL","link":"/tags/GLSL/"},{"name":"Cinematic","slug":"Cinematic","link":"/tags/Cinematic/"},{"name":"GDC","slug":"GDC","link":"/tags/GDC/"},{"name":"RTX","slug":"RTX","link":"/tags/RTX/"},{"name":"VR","slug":"VR","link":"/tags/VR/"}],"categories":[{"name":"GameDev","slug":"GameDev","link":"/categories/GameDev/"},{"name":"TechArt","slug":"TechArt","link":"/categories/TechArt/"},{"name":"Notes","slug":"Notes","link":"/categories/Notes/"}]}